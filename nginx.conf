events {
    # Nginx 이벤트 모듈 설정
    # 여기서는 기본값을 사용하므로 비어있음
}

http {
    upstream nextjs {
        # Next.js 애플리케이션 서버 정의
        # Docker Compose에서 정의한 서비스 이름(nextjs)과 포트(3000)를 지정
        # Docker의 내부 DNS가 서비스 이름을 자동으로 해석
        server nextjs:3000;
    }

    # SSL/TLS 보안 설정
    # TLS 1.2와 1.3만 허용 (오래된 취약한 프로토콜 제외)
    ssl_protocols TLSv1.2 TLSv1.3;
    # 서버 사이퍼 선호도 설정 활성화
    ssl_prefer_server_ciphers on;
    # 높은 강도의 암호화 스위트만 허용
    # !aNULL: 인증 없는 암호화 제외
    # !MD5: 취약한 MD5 해시 알고리즘 제외
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Gzip 압축 설정
    # 전송되는 컨텐츠를 압축하여 대역폭 절약
    gzip on;
    # 압축할 컨텐츠 타입 지정
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    # 프록시 서버를 위한 Vary 헤더 추가
    gzip_vary on;

    # HTTP 서버 설정
    server {
        listen 80;
        server_name localhost;

        # 모든 HTTP 요청을 HTTPS로 영구 리다이렉트(301)
        return 301 https://$host$request_uri;

    }

    # HTTPS 서버 설정
    server {
        # 443포트(HTTPS)에서 SSL 모드로 리스닝
        listen 443 ssl;
        server_name localhost;
        # 정적 파일을 위한 루트 디렉토리 설정
        root /srv/public;
        # Nginx 버전 정보 숨김 (보안)
        server_tokens off;

        # SSL 인증서 파일 경로 설정
        ssl_certificate /etc/nginx/ssl/my_ssl_cert.crt;
        ssl_certificate_key /etc/nginx/ssl/my_ssl_key.key;

        # 보안 관련 HTTP 헤더 설정
        # X-Frame-Options: 클릭재킹 공격 방지
        add_header X-Frame-Options DENY;
        # X-XSS-Protection: XSS 공격 방지
        add_header X-XSS-Protection "1; mode=block";
        # X-Content-Type-Options: MIME 타입 스니핑 방지
        add_header X-Content-Type-Options nosniff;
        # HSTS: HTTPS 강제 적용 (31536000초 = 1년)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 기본 라우팅 설정
        location / {
            # 파일 존재 여부 확인 후 없으면 @nextjs로 내부 리다이렉트
            try_files $uri $uri/ @nextjs;
        }

        # Next.js 애플리케이션으로 프록시 설정
        location @nextjs {
            # 프록시 헤더 설정
            # 클라이언트 IP 전달
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # HTTPS 프로토콜 사용 여부 전달
            proxy_set_header X-Forwarded-Proto https;
            # SSL 사용 여부 전달
            proxy_set_header X-Forwarded-Ssl on;
            # 원본 호스트 헤더 전달
            proxy_set_header Host $http_host;
            # 리다이렉트 비활성화
            proxy_redirect off;
            # Next.js 서버로 요청 전달
            proxy_pass http://nextjs;
            # 보안 쿠키 설정 (HTTPOnly, Secure 플래그 추가)
            proxy_cookie_path / "/; HTTPOnly; Secure";
        }

    }

}